CC     := gcc 
CXX    := g++
NVCC   := nvcc
MPICXX := mpicxx

OPTIMIZATION := -O3 -g -ftree-vectorize -msse2
LOG_ENABLED  := -DLOG_ENABLED
CFLAGS       := -Wno-deprecated -Wall -fPIC ${OPTIMIZATION} ${LOG_ENABLED} #-g  -DNDEBUG 

VOID_INCLUDES ?= /usr/include/anthill
INCLUDES := -I../ -I${PVM_ROOT}/include -I${VOID_INCLUDES}/FilterDev -I${VOID_INCLUDES} -I${VOID_INCLUDES}/Hash -I${VOID_INCLUDES}/comm_api
VOID_LIBS ?= /usr/lib 
CLIBS    := -lexpat -L../.. -L${VOID_LIBS} -L${PVM_ROOT}/lib/LINUX64 -lds -lpvm3 -ldl -lpthread 


# Compiler options for nvcc (it dosn't accept -Wall and -fPIC directly)
NVCCFLAGS := --compiler-options "-Wall -fPIC" -arch sm_11

# Debug/release configuration
#NVCCFLAGS += -g -deviceemu -DDEBUG -D_DEBUG ${LOG_ENABLED}
NVCCFLAGS += -O3 --use_fast_math -DNDEBUG ${LOG_ENABLED}

CUDA_INSTALL_PATH ?= /usr/local/cuda2/cuda
NVCCINCLUDES      := -I$(CUDA_INSTALL_PATH)/include $(INCLUDES)


